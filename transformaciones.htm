<!DOCTYPE html>
<html>
    <head>
        <title>Taller de computacion grafica</title>
        <style>
            html, body { margin: 0; padding: 0; overflow: hidden; }
            #text {
                position: absolute;
                padding: 10px;
                width: 100%;
                text-align: center;
                color: #00e1ff;
            }
        </style>
    </head>
    <body>
        <div id="text">Computaci칩n Gr치fica<br/>
            Transformadas<br/>
            Laura Duque<br/>
        </div>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/three.js/r94/three.min.js"></script>
    <script>

    function init() 
    {

        //Set up the scene
        scene = new THREE.Scene();
        camera = new THREE.PerspectiveCamera(30, window.innerWidth / window.innerHeight, 0.1, 1000);    
        renderer = new THREE.WebGLRenderer();
        renderer.setClearColor(0x000000, 1.0);
        renderer.setSize(window.innerWidth, window.innerHeight);

        var size = 500;
        var arrowSize = 100;
        var divisions = 40;
        var origin = new THREE.Vector3( 0, 0, 0 );
        var x = new THREE.Vector3( 1, 0, 0 );
        var y = new THREE.Vector3( 0, 1, 0 );
        var z = new THREE.Vector3( 0, 0, 1 );
        var color2 = new THREE.Color( 0x333333 ); 
        var colorR = new THREE.Color( 0xAA0000 ); 
        var colorG = new THREE.Color( 0x00AA00 );
        var colorB = new THREE.Color( 0x0000AA );

        //Rejilla
        var gridHelperXZ = new THREE.GridHelper( size, divisions, color2, color2);

        //Ejes X, Y, Z
        var arrowX = new THREE.ArrowHelper( x, origin, arrowSize, colorR );
        var arrowY = new THREE.ArrowHelper( y, origin, arrowSize, colorG );
        var arrowZ = new THREE.ArrowHelper( z, origin, arrowSize, colorB );
            
        //Camera
        camera.position.x = 100;
        camera.position.y = 060;
        camera.position.z = 250;
        camera.lookAt(scene.position);

        //Cubo
        
        function cubo(posini, lado, color)
        { 
            //Creo los vectores para realizar el cubo

            var geometry = new THREE.Geometry();
            var vertices = [
                new THREE.Vector3((posini[0] + lado/2), (posini[1] + lado/2), (posini[2] + lado/2)),
                new THREE.Vector3(lado, (posini[1] + lado/2), (posini[2] + lado/2)),
                new THREE.Vector3(lado, lado, (posini[2] + lado/2)),
                new THREE.Vector3((posini[0] + lado/2), lado, (posini[2] + lado/2)),
                new THREE.Vector3((posini[0] + lado/2), (posini[1] + lado/2), lado),
                new THREE.Vector3(lado, (posini[1] + lado/2), lado),
                new THREE.Vector3(lado, lado, lado),
                new THREE.Vector3((posini[0] + lado/2), lado, lado)
            ];
            
            var a = [

                [0, 1], [1, 2], [2, 3], [3, 0], 
                [4, 5], [5, 6], [6, 7], [7, 4], 
                [0, 4], [1, 5], [2, 6], [3, 7], 

            ];

            //Aristas
            var geometry = new THREE.Geometry();
            var material = new THREE.LineBasicMaterial({ color: color });

            //Creo las aristas
            for (var i = 0; i < a.length; i++) {
                var edge = a[i];
                geometry.vertices.push(vertices[edge[0]], vertices[edge[1]]);
            }

            var cubo = new THREE.LineSegments(geometry, material);
        
            return cubo;
        }

        //P치rametros
        var lado = 15; 
        var cA = 0x9999ee;
        var cB = 0xffff00;
        var cC = 0xff6666;
        var cD = 0x99ffff;
        
        //cubo
        var c1 = cubo(origin, lado, cA);
        // Cubo trasladado
        var c2 = cubo(origin, lado, cB);
        //cubo escalado
        var c3 = cubo(origin, lado, cC);
        //cubo rotado
        var c4 = cubo(origin, lado, cD);

        var traslacion = new THREE.Matrix4();
        //medida de traslaci칩n
        var n = 2;
        traslacion.set(1, 0, 0, n*lado,
                       0, 1, 0, 0,
                       0, 0, 1, 0,
                       0, 0, 0, 1);

            c2.applyMatrix(traslacion);
            

        var escalado = new THREE.Matrix4();
        //escalado
        var e = 1.5;
        escalado.set(e, 0, 0, 0,
                     0, e, 0, 0,
                     0, 0, e, 0,
                     0, 0, 0, e);

            c3.applyMatrix(escalado);
            c4.applyMatrix(escalado);

        var pi = 3.14159265359
        var rotacionX = new THREE.Matrix4();
        // Angulo teta
        var teta = pi/4; 
        var cs = Math.cos(teta);   
        var ss = Math.sin(teta);

        rotacionX.set(1,  0, 0, 0,
                    0, cs, -ss, 0, 
                     0, ss, cs, 0,
                       0, 0, 0, 1);	

            c4.applyMatrix(rotacionX);

        document.body.appendChild(renderer.domElement);
        
        
        //objetos en la escena
        scene.add(gridHelperXZ);
        scene.add(arrowX);
        scene.add(arrowY);
        scene.add(arrowZ);
        scene.add(c1);
        scene.add(c2);
        scene.add(c3);
        scene.add(c4);

        renderer.render(scene, camera);
    }

    init();  
    
    </script>
  </body>
</html>